#! /usr/bin/env jruby -J-Djava.awt.headless=true

# 
# Used to convert png collision maps into an indexed pixmap for use by the server
# Required to remove the need to use png libraries within the server process
# 

include Java
require 'fileutils'

def load_image( filename )
  file = java.io.File.new( filename )
  return javax.imageio.ImageIO.read(file)
end

def process_file( image )
    # read the index from the top line of the image
    index_pixels = image.getRGB(0,0,image.getWidth, 1, nil, 0, image.getWidth )
    
    # read the regular image (everything below the index)
    pixels = image.getRGB(0,1,image.getWidth, image.getHeight-1, nil, 0, image.getWidth )
    
    # the result will be an array of indexed pixels
    result = []
    pixels.each do |pix|
        index = index_pixels.find_index{ |i| i == pix }
        result << index
    end
    
    return result
end


source_image = load_image( ARGV[0] )
target_image_path = ARGV[1] || File.expand_path( ARGV[0] + ".pix" )

result = process_file( source_image )

File.open( target_image_path, "wb" ){ |f| 
    f.write( "CMAP" )
    f.write( [ source_image.getWidth, source_image.getHeight-1 ].pack("NN") )
    f.write( result.pack("C*") ) 
}
